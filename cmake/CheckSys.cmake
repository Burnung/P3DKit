IF (WIN32)  # set stuff for windows
    set(TARGET WINDOWS)
    set(IS_WINDOWS TRUE)
    set(IS_DESKTOP TRUE)
ELSEIF(APPLE)
    IF (NOT DEFINED TARGET_PLATFORM)
        set(TARGET MACOS)
        set(IS_MACOS TRUE)
        set(IS_DESKTOP TRUE)
    ELSEIF (${TARGET_PLATFORM} STREQUAL IOS)
        set(TARGET IOS)
        set(IS_IOS TRUE)
        set(IS_MOBILE TRUE)
    ENDIF ()
    set(IS_APPLE TRUE)
ELSEIF(UNIX)
    IF (NOT DEFINED TARGET_PLATFORM)
        set(TARGET LINUX)
        set(IS_LINUX TRUE)
        set(IS_DESKTOP TRUE)
    ELSEIF (${TARGET_PLATFORM} STREQUAL ANDROID)
        set(TARGET ANDROID)
        set(IS_ANDROID TRUE)
        set(IS_MOBILE TRUE)
    ENDIF ()
ELSE()
    message( FATAL_ERROR "unknown platform" )
ENDIF()

if("${CMAKE_SIZEOF_VOID_P}" STREQUAL "8")
    set(IS_64BIT TRUE)
else()
    set(IS_64BIT FALSE)
endif()

function(add_opengl PROJ)
    IF (IS_WINDOWS)
        target_link_libraries(${PROJ} GLEW::glew_s)
        target_link_libraries(${PROJ} ${OPENGL_LIBRARIES})
    ELSEIF(IS_MACOS)
        target_link_libraries(${PROJ} "-framework Cocoa -framework OpenGL -framework IOKit -framework CoreVideo" )
        target_link_libraries(${PROJ} ${OPENGL_LIBRARIES})
    ELSEIF(IS_IOS)
        target_link_libraries(${PROJ} "-framework OpenGLES")
    ELSEIF(IS_ANDROID)
        target_link_libraries(${PROJ} GLESv2)
    ELSEIF(IS_LINUX)
        target_link_libraries(${PROJ} GL GLEW)
    ENDIF()
endfunction()
